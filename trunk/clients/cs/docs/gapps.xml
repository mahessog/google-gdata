<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Google.GData.Apps</name>
    </assembly>
    <members>
        <member name="T:Google.GData.Apps.NicknameQuery">
            <summary>
            A subclass of FeedQuery to query a Google Apps nickname
            feed URI.
            
            Provides public properties that describe the different
            aspects of the URI, as well as a composite URI.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.NicknameQuery.#ctor(System.String)">
            <summary>
            Constructs a new NicknameQuery to retrieve all nicknames
            in the specified domain.
            
            In addition to calling the constructor, you may set at most
            one of Nickname, StartNickname or UserName to restrict your
            query.
            </summary>
            <param name="domain">the domain to query</param>
        </member>
        <member name="M:Google.GData.Apps.NicknameQuery.CalculateQuery(System.String)">
            <summary>
            Creates the URI query string based on all set properties.
            </summary>
            <returns>the URI query string</returns>
        </member>
        <member name="P:Google.GData.Apps.NicknameQuery.Domain">
            <summary>
            Accessor method for Domain.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.NicknameQuery.StartNickname">
            <summary>
            Accessor method for StartNickname.  If this property
            is non-null, the query will return a feed of up to
            100 nicknames beginning with StartNickname.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.NicknameQuery.Nickname">
            <summary>
            Accessor method for Nickname.  If this property is
            non-null, the query will retrieve the specified
            nickname.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.NicknameQuery.UserName">
            <summary>
            Accessor method for UserName.  If this property is
            non-null, the query will retrieve all nicknames for
            the specified user.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.NicknameQuery.RetrieveAllNicknames">
            <summary>
            Accessor method for RetrieveAllNicknames.  If false,
            the query returns at most 100 matches; if it is
            true (default), all matches are returned.
            </summary>
        </member>
        <member name="T:Google.GData.Apps.UserEntry">
            <summary>
            A Google Apps user entry.  A UserEntry object encapsulates
            the login, name and quota information for a single user.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.UserEntry.USER_ACCOUNT_CATEGORY">
            <summary>
            Category used to label entries that contain user
            extension data.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.UserEntry.#ctor">
            <summary>
            Constructs a new UserEntry instance with the appropriate category
            to indicate that it is a user account.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.UserEntry.Update">
            <summary>
            Updates this UserEntry.
            </summary>
            <returns>the updated UserEntry</returns>
        </member>
        <member name="P:Google.GData.Apps.UserEntry.Login">
            <summary>
            The login element in this user account entry.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.UserEntry.Quota">
            <summary>
            The quota element in this user account entry.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.UserEntry.Name">
            <summary>
            The name element in this user account entry.
            </summary>
        </member>
        <member name="T:Google.GData.Apps.EmailListRecipientQuery">
            <summary>
            A subclass of FeedQuery to query a Google Apps email list
            recipient feed URI.
            
            Provides public properties that describe the different
            aspects of the URI, as well as a composite URI.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientQuery.#ctor(System.String,System.String)">
            <summary>
            Constructs a new EmailListRecipientQuery to retrieve
            the list of recipients for the specified email list on
            the specified domain.
            </summary>
            <param name="domain">the domain to query</param>
            <param name="emailListName">the email list whose recipients
            we wish to retrieve</param>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientQuery.CalculateQuery(System.String)">
            <summary>
            Creates the URI query string based on all set properties.
            </summary>
            <returns>the URI query string</returns>
        </member>
        <member name="P:Google.GData.Apps.EmailListRecipientQuery.Domain">
            <summary>
            Accessor method for Domain.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.EmailListRecipientQuery.EmailListName">
            <summary>
            Accessor method for EmailListName.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.EmailListRecipientQuery.RetrieveAllRecipients">
            <summary>
            Accessor method for RetrieveAllEmailLists.  If false,
            the query returns at most 100 matches; if it is
            true (default), all matches are returned.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.EmailListRecipientQuery.Recipient">
            <summary>
            Accessor method for Recipient.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.EmailListRecipientQuery.StartRecipient">
            <summary>
            Accessor method for StartRecipient.
            </summary>
        </member>
        <member name="T:Google.GData.Apps.NicknameFeed">
            <summary>
            Feed API customization class for defining nickname feed.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.NicknameFeed.#ctor(System.Uri,Google.GData.Client.IService)">
            <summary>
            Constructs a new NicknameFeed.
            </summary>
            <param name="uriBase">the URI of the feed</param>
            <param name="iService">the service with which this
            feed will be associated</param>
        </member>
        <member name="M:Google.GData.Apps.NicknameFeed.CreateFeedEntry">
            <summary>
            Overridden.  Returns a new <code>NicknameEntry</code>.
            </summary>
            <returns>the new <code>NicknameEntry</code></returns>
        </member>
        <member name="T:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService">
            <summary>
            Base service for accessing Google Mail Settings item feeds from the
            Google Apps Google Mail Settings API.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService.labelFeedUriSuffix">
            <summary>
            URL suffixes for the Google Mail Settings tasks
            </summary>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="domain">The hosted domain in which the Google Mail Settings are
            being set up</param>
            <param name="applicationName">The name of the client application 
            using this service.</param>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService.CreateLabel(System.String,System.String)">
            <summary>
            Creates a new Google Mail label for the given userName
            </summary>
            <param name="userName">The user for whom this should be done</param>
            <param name="label">the new Google Mail label</param>
            <returns>a <code>GoogleMailSettingsEntry</code> containing the results of the
            creation</returns>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService.CreateFilter(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new Google Mail filter for the given userName
            </summary>
            <param name="userName">The user for whom this should be done</param>
            <param name="from">come-from email address to be filtered</param>
            <param name="to">send-to email address to be filtered</param>
            <param name="subject">a string the email must have on the subject line to be filtered</param>
            <param name="hasTheWords">a string the email can have anywhere in its subject or body</param>
            <param name="doesNotHaveTheWords">a string the email cannot have anywhere in its subject or body</param>
            <param name="hasAttachment">a boolean representing whether or not the emails contains an attachment</param>
            <param name="label">the name of the label to apply if the message matches the filter criteria</param>
            <param name="shouldMarkAsRead">Whether to automatically mark the message as read
            if the message matches the filter criteria</param>
            <param name="shouldArchive">Whether to automatically move the message to Archived state
            if the message matches the filter criteria</param>
            <returns>a <code>GoogleMailSettingsEntry</code> containing the results of the
            creation</returns>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService.CreateSendAs(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new Google Mail senda-as alias for the given userName
            </summary>
            <param name="userName">The user for whom this should be done</param>
            <param name="name">The name which emails sent using the alias are from</param>
            <param name="address">The email address which emails sent using the alias are from</param>
            <param name="replyTo">If set, this address will be included as the reply-to addres for the alias</param>
            <param name="makeDefault">Whether the new alias would be the default email address</param>
            <returns>a <code>GoogleMailSettingsEntry</code> containing the results of the
            creation</returns>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService.UpdateForwarding(System.String,System.String,System.String,System.String)">
            <summary>
            Updates Google Mail's forwarding rule for the given userName
            </summary>
            <param name="userName">The user for whom this should be done</param>
            <param name="enable">Whether to enable forwarding of incoming mail</param>
            <param name="forwardTo">The email will be forwarded to this address</param>
            <param name="action">What Google Mail should do with its copy of the email after forwarding it on</param>
            <returns>a <code>GoogleMailSettingsEntry</code> containing the results of the
            creation</returns>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService.UpdatePop(System.String,System.String,System.String,System.String)">
            <summary>
            Updates Google Mail's POP settings for the given userName
            </summary>
            <param name="userName">The user for whom this should be done</param>
            <param name="enable">Whether to enable POP3 access</param>
            <param name="enableFor">Whether to enable POP3 for all mail or mail from now on</param>
            <param name="action">What Google Mail should do with its copy of the email after 
            it is retrieved using POP3</param>
            <returns>a <code>GoogleMailSettingsEntry</code> containing the results of the
            creation</returns>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService.UpdateImap(System.String,System.String)">
            <summary>
            Updates Google Mail's IMAP settings for the given userName
            </summary>
            <param name="userName">The user for whom this should be done</param>
            <param name="enable">Whether to enable IMAP access</param>
            <returns>a <code>GoogleMailSettingsEntry</code> containing the results of the
            creation</returns>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService.UpdateVacation(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Updates Google Mail's vacation-responder settings for the given userName
            </summary>
            <param name="userName">The user for whom this should</param>
            <param name="enable">Wheter to enable the vacation responder</param>
            <param name="subject">The subject line of the vacacion responder autoresponse</param>
            <param name="message">The message body of the vacation responder autoresponse</param>
            <param name="contactsOnly">Wheter to only send the autoresponse to known contacts</param>
            <returns>a <code>GoogleMailSettingsEntry</code> containing the results of the
            creation</returns>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService.UpdateSignature(System.String,System.String)">
            <summary>
            Updates Google Mail's signature for the given userName
            </summary>
            <param name="userName">The user for whom this should be done</param>
            <param name="signature">The signature to be appended to outgoing messages</param>
            <returns>a <code>GoogleMailSettingsEntry</code> containing the results of the
            creation</returns>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService.UpdateLanguage(System.String,System.String)">
            <summary>
            Updates Google Mail's display language for the given userName
            </summary>
            <param name="userName">The user for whom this should be done</param>
            <param name="language">Google Mail's display language</param>
            <returns>a <code>GoogleMailSettingsEntry</code> containing the results of the
            creation</returns>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService.UpdateGeneralSettings(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Updates Google Mail's general settings for the given userName
            </summary>
            <param name="userName">The user for whom this should be done</param>
            <param name="label">the new Google Mail label</param>
            <returns>a <code>GoogleMailSettingsEntry</code> containing the results of the
            creation</returns>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService.OnParsedNewGoogleMailSettingsItemEntry(System.Object,Google.GData.Client.FeedParserEventArgs)">
            <summary>
            Event handler. Called when a new Google Mail Settings entry is parsed.
            </summary>
            <param name="sender">the object that's sending the evet</param>
            <param name="e">FeedParserEventArguments, holds the feedentry</param>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService.OnNewFeed(System.Object,Google.GData.Client.ServiceEventArgs)">
            <summary>
            Overridden so that new feeds are returned as <code>GoogleMailSettingsFeed</code>s
            instead of base <code>AtomFeed</code>s.
            </summary>
            <param name="sender"> the object which sent the event</param>
            <param name="e">FeedParserEventArguments, holds the FeedEntry</param> 
        </member>
        <member name="P:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsService.Domain">
            <summary>
            Accessor for Domain property.
            </summary>
        </member>
        <member name="T:Google.GData.Apps.EmailListService">
            <summary>
            The EmailListService class extends the AppsService abstraction
            to define a service that is preconfigured for access to Google Apps
            email list feeds.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.EmailListService.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="applicationName">The name of the client application 
            using this service.</param>
        </member>
        <member name="M:Google.GData.Apps.EmailListService.Query(Google.GData.Apps.EmailListQuery)">
            <summary>
            overwritten Query method
            </summary>
            <param name="feedQuery">The FeedQuery to use</param>
            <returns>the retrieved EmailListFeed</returns>
        </member>
        <member name="M:Google.GData.Apps.EmailListService.Insert(Google.GData.Apps.EmailListFeed,Google.GData.Apps.EmailListEntry)">
            <summary>
            Inserts a new email list entry into the specified feed.
            </summary>
            <param name="feed">the feed into which this entry should be inserted</param>
            <param name="entry">the entry to insert</param>
            <returns>the inserted entry</returns>
        </member>
        <member name="M:Google.GData.Apps.EmailListService.Insert(System.Uri,Google.GData.Apps.EmailListEntry)">
            <summary>
            Inserts a new email list entry into the feed at the
            specified URI.
            </summary>
            <param name="feedUri">the URI of the feed into which this entry should be inserted</param>
            <param name="entry">the entry to insert</param>
            <returns>the inserted entry</returns>
        </member>
        <member name="M:Google.GData.Apps.EmailListService.Update(Google.GData.Client.AtomEntry)">
            <summary>
            Overrides the base Update() method to throw an
            exception, because email list entries cannot be
            updated.
            </summary>
            <param name="entry">the entry the user is trying to update</param>
        </member>
        <member name="M:Google.GData.Apps.EmailListService.Delete(System.Uri)">
            <summary>
            Overridden Delete method that throws AppsException
            </summary>
            <param name="uri">the URI to delete</param>
        </member>
        <member name="M:Google.GData.Apps.EmailListService.Delete(Google.GData.Apps.EmailListEntry)">
            <summary>
            Overridden Delete method that throws AppsException
            </summary>
            <param name="entry">the EmailListEntry to delete</param>
        </member>
        <member name="M:Google.GData.Apps.EmailListService.OnParsedNewEmailListEntry(System.Object,Google.GData.Client.FeedParserEventArgs)">
            <summary>
            Event handler. Called when a new list entry is parsed.
            </summary>
            <param name="sender">the object that's sending the evet</param>
            <param name="e">FeedParserEventArguments, holds the feedentry</param>
        </member>
        <member name="M:Google.GData.Apps.EmailListService.OnParsedNewFeed(System.Object,Google.GData.Client.ServiceEventArgs)">
            <param name="e"><code>ServiceEventArgs</code>, holds the feed</param>
        </member>
        <member name="T:Google.GData.Apps.EmailListQuery">
            <summary>
            A subclass of FeedQuery to query a Google Apps email list
            feed URI.
            
            Provides public properties that describe the different
            aspects of the URI, as well as a composite URI.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.EmailListQuery.#ctor(System.String)">
            <summary>
            Constructs a new EmailListQuery to retrieve all email lists
            in the specified domain.
            
            In addition to calling the constructor, you may set either
            Recipient or EmailListName (but not both) to restrict your query.
            </summary>
            <param name="domain">the domain to query</param>
        </member>
        <member name="M:Google.GData.Apps.EmailListQuery.CalculateQuery(System.String)">
            <summary>
            Creates the URI query string based on all set properties.
            </summary>
            <returns>the URI query string</returns>
        </member>
        <member name="P:Google.GData.Apps.EmailListQuery.Domain">
            <summary>
            Accessor method for Domain.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.EmailListQuery.Recipient">
            <summary>
            Accessor method for Recipient.  If this property is
            non-null, the query will retrieve all email list
            subscriptions for the specified email address.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.EmailListQuery.EmailListName">
            <summary>
            Accessor method for EmailListName.  If this property is
            non-null, the query will retrieve only the specified
            email list.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.EmailListQuery.StartEmailListName">
            <summary>
            Accessor method for StartEmailListName.  If this property
            is non-null, the query will retrieve a page of at most 100
            email lists, starting with the specified email list.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.EmailListQuery.RetrieveAllEmailLists">
            <summary>
            Accessor method for RetrieveAllEmailLists.  If false,
            the query returns at most 100 matches; if it is
            true (default), all matches are returned.
            </summary>
        </member>
        <member name="T:Google.GData.Apps.Migration.MailItemService">
            <summary>
            Base service for accessing mail item feeds from the
            Google Apps Domain Migration API.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.Migration.MailItemService.mailFeedUriSuffix">
            <summary>
            Feed for inserting mail messages.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.Migration.MailItemService.batchFeedUriSuffix">
            <summary>
            Suffix to insert mail messages in a batch.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.Migration.MailItemService.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="domain">The hosted domain in which a migration is
            being set up</param>
            <param name="applicationName">The name of the client application 
            using this service.</param>
        </member>
        <member name="M:Google.GData.Apps.Migration.MailItemService.Batch(System.String,System.String,Google.GData.Apps.Migration.MailItemEntry[])">
            <summary>
            Inserts one or more mail item entries in a single batched request.
            Use this method to reduce HTTP overhead when inserting many emails
            in a single transfer.
            </summary>
            <param name="domain">the domain into which to migrate mail</param>
            <param name="entries">the mail messages to batch insert</param>
            <param name="userName">the user for whom this should be done</param>
            <returns>a <code>MailItemFeed</code> containing the results of the
            batch insertion</returns>
        </member>
        <member name="M:Google.GData.Apps.Migration.MailItemService.Batch(System.String,System.String,System.Collections.Generic.List{Google.GData.Apps.Migration.MailItemEntry})">
            <summary>
            Inserts one or more mail item entries in a single batched request.
            Use this method to reduce HTTP overhead when inserting many emails
            in a single transfer.
            </summary>
            <param name="domain">the domain into which to migrate mail</param>
            <param name="entries">the mail messages to batch insert</param>
            <param name="userName">the user for whom this should be done</param>
            <returns>a <code>MailItemFeed</code> containing the results of the
            batch insertion</returns>
        </member>
        <member name="M:Google.GData.Apps.Migration.MailItemService.OnParsedNewMailItemEntry(System.Object,Google.GData.Client.FeedParserEventArgs)">
            <summary>
            Event handler. Called when a new migration entry is parsed.
            </summary>
            <param name="sender">the object that's sending the evet</param>
            <param name="e">FeedParserEventArguments, holds the feedentry</param>
        </member>
        <member name="M:Google.GData.Apps.Migration.MailItemService.OnNewFeed(System.Object,Google.GData.Client.ServiceEventArgs)">
            <summary>
            Overridden so that new feeds are returned as <code>MailItemFeed</code>s
            instead of base <code>AtomFeed</code>s.
            </summary>
            <param name="sender"> the object which sent the event</param>
            <param name="e">FeedParserEventArguments, holds the FeedEntry</param> 
        </member>
        <member name="P:Google.GData.Apps.Migration.MailItemService.Domain">
            <summary>
            Accessor for Domain property.
            </summary>
        </member>
        <member name="T:Google.GData.Apps.Migration.MailItemFeed">
            <summary>
            Feed API customization class for defining the Google Apps
            Domain Migration API's mail item feed.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.Migration.MailItemFeed.#ctor(System.Uri,Google.GData.Client.IService)">
            <summary>
            Constructor
            </summary>
            <param name="uriBase">The uri for the migration feed.</param>
            <param name="iService">The migration service.</param>
        </member>
        <member name="M:Google.GData.Apps.Migration.MailItemFeed.CreateFeedEntry">
            <summary>
            Overridden.  Creates a new <code>MailItemEntry</code>.
            </summary>
            <returns>the new <code>MailItemEntry</code>.</returns>
        </member>
        <member name="M:Google.GData.Apps.Migration.MailItemFeed.HandleExtensionElements(Google.GData.Client.ExtensionElementEventArgs,Google.GData.Client.AtomFeedParser)">
            <summary>
            Gets called after we handled the custom entry, to handle other
            potential parsing tasks
            </summary>
            <param name="e"></param>
            <param name="parser"></param>
        </member>
        <member name="T:Google.GData.Apps.Migration.MailItemEntry">
            <summary>
            A Google Apps mail item entry.  Represents a single email to be
            migrated: its message contents, starred and read status, and any
            labels to be applied to it.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.Migration.MailItemEntry.MAIL_ITEM_CATEGORY">
            <summary>
            Category used to label entries that contain mail item
            extension data.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.Migration.MailItemEntry.#ctor">
            <summary>
            Constructs a new <code>MailItemEntry</code> object.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.Migration.MailItemEntry.Rfc822Msg">
            <summary>
            Rfc822Msg property accessor
            </summary>
        </member>
        <member name="P:Google.GData.Apps.Migration.MailItemEntry.Labels">
            <summary>
            Labels property accessor
            </summary>
        </member>
        <member name="P:Google.GData.Apps.Migration.MailItemEntry.MailItemProperties">
            <summary>
            MailItemProperties accessor
            </summary>
        </member>
        <member name="T:Google.GData.Apps.AppsService">
            <summary>
            The AppsService class provides a simpler interface
            for executing common Google Apps provisioning
            requests.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.AppsService.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs an AppsService with the specified credentials
            for accessing provisioning feeds on the specified domain.
            </summary>
            <param name="domain">the domain to access</param>
            <param name="adminEmailAddress">the administrator's email address</param>
            <param name="adminPassword">the administrator's password</param>
        </member>
        <member name="M:Google.GData.Apps.AppsService.#ctor(System.String,System.String)">
            <summary>
            Constructs an AppsService with the specified Authentication Token
            for accessing provisioning feeds on the specified domain.
            </summary>
            <param name="domain">the domain to access</param>
            <param name="authenticationToken">the administrator's Authentication Token</param>
        </member>
        <member name="M:Google.GData.Apps.AppsService.KeepAlive(System.Boolean)">
            <summary>indicates if the connection should be kept alive, 
            default is true
            </summary>
            <param name="keepAlive">bool to set if the connection should be keptalive</param>
        </member>
        <member name="M:Google.GData.Apps.AppsService.GetNewAuthenticationToken(System.String,System.String,System.String)">
            <summary>
            Generates a new Authentication Toklen for AppsService 
            with the specified credentials for accessing provisioning feeds on the specified domain.
            </summary>
            <param name="domain">the domain to access</param>
            <param name="adminEmailAddress">the administrator's email address</param>
            <param name="adminPassword">the administrator's password</param>
            <returns>the newly generated authentication token</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.CreateUser(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new user account.
            </summary>
            <param name="username">the account's username</param>
            <param name="givenName">the user's first (given) name</param>
            <param name="familyName">the user's last (family) name</param>
            <param name="password">the account's password</param>
            <returns>the newly created UserEntry</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.CreateUser(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Creates a new user account.
            </summary>
            <param name="username">the account's username</param>
            <param name="givenName">the user's first (given) name</param>
            <param name="familyName">the user's last (family) name</param>
            <param name="password">the account's password</param>
            <param name="quotaLimitInMb">the account's quota, in MB</param>
            <returns>the newly created UserEntry</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.CreateUser(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new user account.
            </summary>
            <param name="username">the account's username</param>
            <param name="givenName">the user's first (given) name</param>
            <param name="familyName">the user's last (family) name</param>
            <param name="password">the account's password</param>
            <param name="passwordHashFunction">the name of the hash function to hash the password</param>
            <returns>the newly created UserEntry</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Creates a new user account.
            </summary>
            <param name="username">the account's username</param>
            <param name="givenName">the user's first (given) name</param>
            <param name="familyName">the user's last (family) name</param>
            <param name="password">the account's password</param>
            <param name="passwordHashFunction">the name of the hash function to hash the password</param>
            <param name="quotaLimitInMb">the account's quota, in MB</param>
            <returns>the newly created UserEntry</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RetrieveAllUsers">
            <summary>
            Retrieves all user account entries on this domain.
            </summary>
            <returns>the feed containing all user account entries</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RetrievePageOfUsers(System.String)">
            <summary>
            Retrieves a page of at most 100 users beginning with the
            specified username.  Usernames are ordered case-insensitively
            by ASCII value.
            </summary>
            <param name="startUsername">the first username that should appear
            in your result set</param>
            <returns>the feed containing the matching user account entries</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RetrieveUser(System.String)">
            <summary>
            Retrieves the entry for the specified user.
            </summary>
            <param name="username">the username to retrieve</param>
            <returns>the UserEntry for this user</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.UpdateUser(Google.GData.Apps.UserEntry)">
            <summary>
            Updates the specified user account.
            </summary>
            <param name="entry">The updated entry; modified properties
            can include the user's first name, last name, username and
            password.</param>
            <returns>the updated UserEntry</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.SetRequestFactory(Google.GData.Client.IGDataRequestFactory)">
            <summary>
            the appsservice is an application object holding several
            real services object. To allow the setting of advanced http properties,
            proxies and other things, we allow setting the factory class that is used. 
            
            a getter does not make a lot of sense here, as which of the several factories in use
            are we getting? It also would give the illusion that you could get one object and then
            modify it's settings. 
            </summary>
            <param name="factory">The factory to use for the AppsService</param>
            <returns></returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.CreateRequestFactory">
            <summary>
            this creates a default AppsService Factory object that can be used to 
            be modified and then set using SetRequestFactory()
            </summary>
            <returns></returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.SuspendUser(System.String)">
            <summary>
            Suspends a user account.
            </summary>
            <param name="username">the username whose account you wish to suspend</param>
            <returns>the updated UserEntry</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RestoreUser(System.String)">
            <summary>
            Restores a user account.
            </summary>
            <param name="username">the username whose account you wish to restore</param>
            <returns>the updated UserEntry</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.AddAdminPrivilege(System.String)">
            <summary>
            Adds admin privileges for a user.  Note that executing this method
            on a user who is already an admin has no effect.
            </summary>
            <param name="username">the user to make an administrator</param>
            <returns>the updated UserEntry</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RemoveAdminPrivilege(System.String)">
            <summary>
            Removes admin privileges for a user.  Note that executing this method
            on a user who is not an admin has no effect.
            </summary>
            <param name="username">the user from which to revoke admin privileges</param>
            <returns>the updated UserEntry</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.ForceUserToChangePassword(System.String)">
            <summary>
            Forces the specified user to change his or her password at the next
            login.
            </summary>
            <param name="username">the user who must change his/her password upon
            logging in next</param>
            <returns>the updated UserEntry</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.DeleteUser(System.String)">
            <summary>
            Deletes a user account.
            </summary>
            <param name="username">the username whose account you wish to delete</param>
        </member>
        <member name="M:Google.GData.Apps.AppsService.CreateNickname(System.String,System.String)">
            <summary>
            Creates a nickname for the specified user.
            </summary>
            <param name="username">the user account for which you are creating a nickname</param>
            <param name="nickname">the nickname for the user account</param>
            <returns>the newly created NicknameEntry object</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RetrieveAllNicknames">
            <summary>
            Retrieves all nicknames on this domain.
            </summary>
            <returns>the feed containing all nickname entries</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RetrievePageOfNicknames(System.String)">
            <summary>
            Retrieves a page of at most 100 nicknames beginning with the
            specified nickname.  Nicknames are ordered case-insensitively
            by ASCII value.
            </summary>
            <param name="startNickname">the first nickname that should appear
            in your result set</param>
            <returns>the feed containing the matching nickname entries</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RetrieveNicknames(System.String)">
            <summary>
            Retrieves all nicknames for the specified user.
            </summary>
            <param name="username">the username for which you wish to retrieve nicknames</param>
            <returns>the feed containing all nickname entries for this user</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RetrieveNickname(System.String)">
            <summary>
            Retrieves the specified nickname.
            </summary>
            <param name="nickname">the nickname to retrieve</param>
            <returns>the resulting NicknameEntry</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.DeleteNickname(System.String)">
            <summary>
            Deletes the specified nickname.
            </summary>
            <param name="nickname">the nickname that you wish to delete</param>
        </member>
        <member name="M:Google.GData.Apps.AppsService.CreateEmailList(System.String)">
            <summary>
            Creates a new email list on this domain.
            </summary>
            <param name="emailList">the name of the email list that you wish to create.</param>
            <returns>the newly created EmailListEntry</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RetrieveAllEmailLists">
            <summary>
            Retrieves all email lists on the domain.
            </summary>
            <returns>the feed containing all email list entries</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RetrievePageOfEmailLists(System.String)">
            <summary>
            Retrieves a page of at most 100 email list names beginning with the
            specified email list name.  Email lists are ordered case-insensitively
            by ASCII value.
            </summary>
            <param name="startEmailListName">the first email list name that should
            appear in your result set</param>
            <returns>the feed containing the matching email list entries</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RetrieveEmailList(System.String)">
            <summary>
            Retrieves the specified email list.
            </summary>
            <param name="emailList">is the name of the email list that you wish to retrieve</param>
            <returns>the resulting EmailListEntry</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RetrieveEmailLists(System.String)">
            <summary>
            Retrieves all email lists to which the specified user subscribes.
            </summary>
            <param name="recipient">the username or email address of a hosted user
            for which you wish to retrieve email list subscriptions</param>
            <returns>the feed containing all matching email list entries</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.DeleteEmailList(System.String)">
            <summary>
            Deletes the specified email list.
            </summary>
            <param name="emailList">the name of the email list that you wish to delete</param>
        </member>
        <member name="M:Google.GData.Apps.AppsService.AddRecipientToEmailList(System.String,System.String)">
            <summary>
            Adds the specified recipient to an email list.
            </summary>
            <param name="recipientAddress">the email address that is being added</param>
            <param name="emailList">the email address to which the address is being added</param>
            <returns>the newly inserted EmailListRecipientEntry</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RetrieveAllRecipients(System.String)">
            <summary>
            Retrieves list of all of the subscribers to an email list.
            </summary>
            <param name="emailList">the name of the email list for which you wish to
            retrieve a subscriber list</param>
            <returns>a feed containing all of the subscribers to this email list</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RetrievePageOfRecipients(System.String,System.String)">
            <summary>
            Retrieves a page of at most 100 subscribers to an email list.
            Email addresses are ordered case-insensitively by ASCII value.
            </summary>
            <param name="emailList">the name of the email list for which you
            are retrieving recipients</param>
            <param name="startRecipient">the first email address that should
            appear in your result set</param>
            <returns>a feed containing the matching subscribers</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsService.RemoveRecipientFromEmailList(System.String,System.String)">
            <summary>
            Removes the specified recipient from an email list.
            </summary>
            <param name="recipientAddress">the email address that is being removed</param>
            <param name="emailList">the email address from which the address is being removed</param>
        </member>
        <member name="P:Google.GData.Apps.AppsService.ApplicationName">
            <summary>
            ApplicationName property accessor
            </summary>
        </member>
        <member name="P:Google.GData.Apps.AppsService.Domain">
            <summary>
            Domain property accessor
            </summary>
        </member>
        <member name="P:Google.GData.Apps.AppsService.Groups">
            <summary>
            GroupsService accessor
            </summary>
        </member>
        <member name="T:Google.GData.Apps.AppsExtendedEntry">
            <summary>
            A Google Apps extended entry for extended properties.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.AppsExtendedEntry.#ctor">
            <summary>
            Constructs a new <code>AppsExtendedEntry</code> object.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.AppsExtendedEntry.getPropertyByName(System.String)">
            <summary>
            Gets a PropertyElement by its Name
            </summary>
            <returns>a <code>PropertyElement</code> containing the results of the
            execution</returns>         
        </member>
        <member name="M:Google.GData.Apps.AppsExtendedEntry.getPropetyValueByName(System.String)">
            <summary>
            Gets a the Value of a PropertyElement by its Name
            </summary>
            <returns>a string containing the results of the execution</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsExtendedEntry.Update">
            <summary>
            Updates this AppsExtendedEntry.
            </summary>
            <returns>the updated GroupsEntry</returns>
        </member>
        <member name="P:Google.GData.Apps.AppsExtendedEntry.Properties">
            <summary>
            Properties accessor
            </summary>
        </member>
        <member name="T:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsFeed">
            <summary>
            Feed API customization class for defining the Google Apps
            Google Mail Settings API's feed.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsFeed.#ctor(System.Uri,Google.GData.Client.IService)">
            <summary>
            Constructor
            </summary>
            <param name="uriBase">The uri for the migration feed.</param>
            <param name="iService">The GoogleMailSettings service.</param>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsFeed.CreateFeedEntry">
            <summary>
            Overridden.  Creates a new <code>GoogleMailSettingsEntry</code>.
            </summary>
            <returns>the new <code>GoogleMailSettingsEntry</code>.</returns>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsFeed.HandleExtensionElements(Google.GData.Client.ExtensionElementEventArgs,Google.GData.Client.AtomFeedParser)">
            <summary>
            Gets called after we handled the custom entry, to handle other
            potential parsing tasks
            </summary>
            <param name="e"></param>
            <param name="parser"></param>
        </member>
        <member name="T:Google.GData.Apps.EmailListRecipientFeed">
            <summary>
            Feed API customization class for defining email list recipient feed.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientFeed.#ctor(System.Uri,Google.GData.Client.IService)">
            <summary>
            Constructs a new EmailListRecipientFeed.
            </summary>
            <param name="uriBase">the feed URI</param>
            <param name="iService">the Service object with which this
            feed is to be be associated</param>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientFeed.CreateFeedEntry">
            <summary>
            Overridden.  Returns a new <code>EmailListRecipientEntry</code>.
            </summary>
            <returns>the new <code>EmailListRecipientEntry</code></returns>
        </member>
        <member name="T:Google.GData.Apps.UserService">
            <summary>
            The UserService class extends the AppsService abstraction
            to define a service that is preconfigured for access to Google Apps
            user accounts feeds.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.UserService.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="applicationName">The name of the client application 
            using this service.</param>
        </member>
        <member name="M:Google.GData.Apps.UserService.Query(Google.GData.Apps.UserQuery)">
            <summary>
            overwritten Query method
            </summary>
            <param name="feedQuery">The FeedQuery to use</param>
            <returns>the retrieved UserFeed</returns>
        </member>
        <member name="M:Google.GData.Apps.UserService.Insert(Google.GData.Apps.UserFeed,Google.GData.Apps.UserEntry)">
            <summary>
            Inserts a new user account entry into the specified feed.
            </summary>
            <param name="feed">the feed into which this entry should be inserted</param>
            <param name="entry">the entry to insert</param>
            <returns>the inserted entry</returns>
        </member>
        <member name="M:Google.GData.Apps.UserService.Insert(System.Uri,Google.GData.Apps.UserEntry)">
            <summary>
            Inserts a new user account entry into the feed at the
            specified URI.
            </summary>
            <param name="feedUri">the URI of the feed into which this entry should be inserted</param>
            <param name="entry">the entry to insert</param>
            <returns>the inserted entry</returns>
        </member>
        <member name="M:Google.GData.Apps.UserService.Delete(System.Uri)">
            <summary>
            Overridden Delete method that throws AppsException
            </summary>
            <param name="uri">the URI to delete</param>
        </member>
        <member name="M:Google.GData.Apps.UserService.Delete(Google.GData.Apps.UserEntry)">
            <summary>
            Overridden Delete method that throws AppsException
            </summary>
            <param name="entry">the entry to delete</param>
        </member>
        <member name="M:Google.GData.Apps.UserService.OnParsedNewUserEntry(System.Object,Google.GData.Client.FeedParserEventArgs)">
            <summary>
            Event handler. Called when a new list entry is parsed.
            </summary>
            <param name="sender">the object that's sending the evet</param>
            <param name="e">FeedParserEventArguments, holds the feedentry</param>
        </member>
        <member name="M:Google.GData.Apps.UserService.OnParsedNewFeed(System.Object,Google.GData.Client.ServiceEventArgs)">
            <param name="e"><code>ServiceEventArgs</code>, holds the feed</param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Google.GData.Apps.UserQuery" -->
        <member name="M:Google.GData.Apps.UserQuery.#ctor(System.String)">
            <summary>
            Constructs a new UserQuery to retrieve all users
            in the specified domain.
            </summary>
            <param name="domain">the domain to access</param>
        </member>
        <member name="M:Google.GData.Apps.UserQuery.#ctor(System.String,System.Boolean)">
            <summary>
            Constructs a new UserQuery to retrieve users in
            the specified domain.  Use this constructor if you only
            wish to retrieve the first 100 users, instead of the
            entire list.
            </summary>
            <param name="domain">the domain to access</param>
            <param name="retrieveAllUsers">true to retrieve all matches,
            false to return a maximum of 100 users</param>
        </member>
        <member name="M:Google.GData.Apps.UserQuery.CalculateQuery(System.String)">
            <summary>
            Creates the URI query string based on all set properties.
            </summary>
            <returns>the URI query string</returns>
        </member>
        <member name="P:Google.GData.Apps.UserQuery.Domain">
            <summary>
            Accessor method for Domain.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.UserQuery.StartUserName">
            <summary>
            Accessor method for StartUserName.  If set,
            the query will return a feed of at most 100
            users beginning at this username.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.UserQuery.UserName">
            <summary>
            Accessor method for UserName.  If set, this
            query will return a feed containing only the
            specified user.  If both UserName and StartUserName
            are null, the query returns the feed of all users
            in the domain.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.UserQuery.RetrieveAllUsers">
            <summary>
            Accessor method for RetrieveAllUsers.  If false,
            the query returns at most 100 matches; if it is
            true (default), all matches are returned.
            </summary>
        </member>
        <member name="T:Google.GData.Apps.NicknameEntry">
            <summary>
            A Google Apps nickname entry.  A NicknameEntry identifies a
            nickname and the user to whom the nickname is assigned.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.NicknameEntry.NICKNAME_CATEGORY">
            <summary>
            Category used to label entries that contain nickname
            extension data.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.NicknameEntry.#ctor">
            <summary>
            Constructs a new NicknameEntry instance with the appropriate category
            to indicate that it is a nickname.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.NicknameEntry.Update">
            <summary>
            Overrides the base Update() method to throw an
            exception, because nickname entries cannot be
            updated.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.NicknameEntry.Login">
            <summary>
            The login element in this entry.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.NicknameEntry.Nickname">
            <summary>
            The nickname element in this entry.
            </summary>
        </member>
        <member name="T:Google.GData.Apps.AppsExtendedFeed">
            <summary>
            Feed API customization class for defining the Google Apps
            Exteded feed.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.AppsExtendedFeed.#ctor(System.Uri,Google.GData.Client.IService)">
            <summary>
            Constructor
            </summary>
            <param name="uriBase">The uri for the migration feed.</param>
            <param name="iService">The GoogleMailSettings service.</param>
        </member>
        <member name="M:Google.GData.Apps.AppsExtendedFeed.CreateFeedEntry">
            <summary>
            Overridden. Creates a new <code>AppsExtendedEntry</code>.
            </summary>
            <returns>the new <code>AppsExtendedEntry</code>.</returns>
        </member>
        <member name="M:Google.GData.Apps.AppsExtendedFeed.HandleExtensionElements(Google.GData.Client.ExtensionElementEventArgs,Google.GData.Client.AtomFeedParser)">
            <summary>
            Gets called after we handled the custom entry, to handle other
            potential parsing tasks
            </summary>
            <param name="e"></param>
            <param name="parser"></param>
        </member>
        <member name="T:Google.GData.Apps.EmailListRecipientEntry">
            <summary>
            A Google Apps email list recipient entry.  This class
            defines a single recipient on an email list using a Who
            (gd:who) object.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.EmailListRecipientEntry.EMAILLIST_RECIPIENT_CATEGORY">
            <summary>
            Category used to label entries that contain email list
            recipient extension data.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientEntry.#ctor">
            <summary>
            Constructs a new EmailListRecipientEntry without
            setting the Recipient property.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientEntry.#ctor(System.String)">
            <summary>
            Constructs a new EmailListRecipientEntry, using
            the specified email address to initialize the
            Recipient property.
            </summary>
            <param name="recipientAddress">the recipient's
            email address</param>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientEntry.Update">
            <summary>
            Overrides the base Update() method to throw a ClientFeedException,
            because email list recipient entries cannot be updated.  This exception
            indicates that the client made an erroneous request to the email
            list feed.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.EmailListRecipientEntry.Recipient">
            <summary>
            The recipient element in this entry.
            </summary>
        </member>
        <member name="T:Google.GData.Apps.AppsException">
            <summary>
            The AppsException class defines an error resulting from
            a Google Apps provisioning request.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.UnknownError">
            <summary>
            Google Apps error indicating that the request failed
            for an unknown reason.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.UserDeletedRecently">
            <summary>
            Google Apps error indicating that the request instructs
            Google to create a new user but uses the username of an
            account that was deleted in the previous five days.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.UserSuspended">
            <summary>
            Google Apps error indicating that the user identified in
            the request is suspended.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.DomainUserLimitExceeded">
            <summary>
            Google Apps error indicating that the specified domain has
            already reached its quota of user accounts.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.DomainAliasLimitExceeded">
            <summary>
            Google Apps error indicating that the specified domain has
            already reached its quota of aliases. Aliases include
            nicknames and email lists. 
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.DomainSuspended">
            <summary>
            Google Apps error indicating that Google has suspended the
            specified domain's access to Google Apps.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.DomainFeatureUnavailable">
            <summary>
            Google Apps error indicating that a particular feature
            is not available for the domain.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.EntityExists">
            <summary>
            Google Apps error indicating that the request instructs
            Google to create an entity that already exists.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.EntityDoesNotExist">
            <summary>
            Google Apps error indicating that the request asks Google
            to retrieve an entity that does not exist.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.EntityNameIsReserved">
            <summary>
            Google Apps error indicating that the request instructs
            Google to create an entity with a reserved name, such as
            "abuse" or "postmaster".
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.EntityNameNotValid">
            <summary>
            Google Apps error indicating that the request provides an
            invalid name for a requested resource.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.InvalidGivenName">
            <summary>
            Google Apps error indicating that the value in the API request 
            for the user's first name, or given name, contains unaccepted
            characters.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.InvalidFamilyName">
            <summary>
            Google Apps error indicating that the value in the API request
            for the user's surname, or family name, contains unaccepted
            characters.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.InvalidPassword">
            <summary>
            Google Apps error indicating that the value in the API request
            for the user's password contains an invalid number of characters
            or unaccepted characters.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.InvalidUsername">
            <summary>
            Google Apps error indicating that the value in the API request
            for the user's username contains unaccepted characters.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.InvalidHashFunctionName">
            <summary>
            Google Apps error indicating that the specified password
            hash function name is not supported.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.InvalidHashDigestLength">
            <summary>
            Google Apps error indicating that the password specified
            does not comply with the hash function specified.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.InvalidEmailAddress">
            <summary>
            Google Apps error indicating that the email address 
            specified is not valid.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.InvalidQueryParameterValue">
            <summary>
            Google Apps error indicating that the query parameter value
            specified is not valid.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.AppsException.TooManyRecipientsOnEmailList">
            <summary>
            Google Apps error indicating that the request instructs Google
            to add users to an email list, but that list has already reached
            the maximum number of subscribers.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.AppsException.#ctor">
            <summary>
            Constructs a new AppsException with no properties set.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.AppsException.#ctor(Google.GData.Client.GDataRequestException)">
            <summary>
            Constructs a new AppsException to be parsed from the specified
            GDataRequestException.
            </summary>
            <param name="e"></param>
            <seealso cref="M:Google.GData.Apps.AppsException.ParseAppsException(Google.GData.Client.GDataRequestException)"/>
        </member>
        <member name="M:Google.GData.Apps.AppsException.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs a new AppsException with the specified properties.
            </summary>
            <param name="errorCode">the value of the ErrorCode property</param>
            <param name="invalidInput">the value of the InvalidInput property</param>
            <param name="reason">the value of the Reason property</param>
        </member>
        <member name="M:Google.GData.Apps.AppsException.ParseAppsException(Google.GData.Client.GDataRequestException)">
            <summary>
            Parses a GDataRequestException, which wraps the HTTP
            error responses, into an AppsException.
            </summary>
            <param name="e">the GDataRequestException to parse</param>
            <returns>a new AppsException object. The object's ErrorCode,
            InvalidInput and Reason properties will be set if the XML
            in the HTTP response could be parsed, or null otherwise.</returns>
        </member>
        <member name="P:Google.GData.Apps.AppsException.ErrorCode">
            <summary>
            Accessor for ErrorCode.  This property specifies the
            type of error that caused an API request to fail.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.AppsException.InvalidInput">
            <summary>
            Accessor for InvalidInput.  This property contains the
            data that caused an API response to fail; it may not be
            provided for all error types.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.AppsException.Reason">
            <summary>
            Accessor for Reason.  This property contains a short
            explanation of the error that occurred.
            </summary>
        </member>
        <member name="T:Google.GData.Apps.Groups.GroupsService">
            <summary>
            Base service for accessing Google Groups item feeds from the
            Google Apps Google Groups API.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.Groups.GroupsService.memberUriSuffix">
            <summary>
            URL suffixes for the Google Groups tasks
            </summary>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="domain">The hosted domain in which the Google Groups are
            being set up</param>
            <param name="applicationName">The name of the client application 
            using this service.</param>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.QueryGroups(System.Uri)">
            <summary>
            overwritten Query method
            </summary>
            <param name="uri">The URI for the query</param>
            <returns>the retrieved AppsExtendedFeed</returns>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.CreateGroup(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new group
            </summary>
            <param name="groupId">The groupId (required) argument identifies the ID of the new group.</param>
            <param name="groupName">The groupName (required) argument identifies the name of the group to 
            which the address is being added.</param>
            <param name="description">The description argument provides a general description of the group.</param>
            <param name="emailPermission">The emailPermission argument sets the permissions level of the group.</param>
            <returns>a <code>AppsExtendedEntry</code> containing the results of the
            creation</returns>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.UpdateGroup(System.String,System.String,System.String,System.String)">
            <summary>
            Updates a group
            </summary>
            <param name="groupId">The groupId (required) argument identifies the ID of the new group.</param>
            <param name="groupName">The groupName (required) argument identifies the name of the group to 
            which the address is being added.</param>
            <param name="description">The description argument provides a general description of the group.</param>
            <param name="emailPermission">The emailPermission argument sets the permissions level of the group.</param>
            <returns>a <code>AppsExtendedEntry</code> containing the results of the
            update</returns>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.RetrieveGroup(System.String)">
            <summary>
            Retrieves a group by its groupId
            </summary>
            <param name="groupId">The groupId argument identifies the group</param>       
            <returns>a <code>AppsExtendedEntry</code> containing the results of the
            query</returns>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.RetrieveAllGroups">
            <summary>
            Retrieves all the groups
            </summary>      
            <returns>a <code>AppsExtendedFeed</code> containing all the <code>AppsExtendedEntry</code>
            from the Domain</returns>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.RetrievePageOfGroups(System.String)">
            <summary>
            Retrieves a page from all the groups
            </summary>
            <param name="startKey">resume key from the previous response (used for pagination)</param>
            <returns>a <code>AppsExtendedFeed</code> containing all the <code>AppsExtendedEntry</code>
            from the Domain</returns>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.RetrieveGroups(System.String,System.Boolean)">
            <summary>
            Retrieves groups of a member or groups of another group.
            </summary>
            <param name="memberId">username or groupId to retrieve the groups</param>
            <param name="directOnly">retrieve groups where the memberId is direct member or not</param>
            <returns>a <code>AppsExtendedFeed</code> containing all the <code>AppsExtendedEntry</code>
            from the Domain</returns>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.DeleteGroup(System.String)">
            <summary>
            Deletes a group using its Id.
            </summary>
            <param name="groupId">Groups's id</param>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.AddMemberToGroup(System.String,System.String)">
            <summary>
            Adds a member to a group
            </summary>
            <param name="memberId">username or groupId to retrieve the groups</param>
            <param name="groupId">Groups's id</param>
            <returns>a <code>AppsExtendedEntry</code> containing the results of the
            creation</returns>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.RetrieveAllMembers(System.String)">
            <summary>
            Retrieves all members of the group
            </summary>
            <param name="groupId">Groups's id</param>
            <param name="expandSubgroups">When set to false, will return only direct/immediate
            members, as opposed to all transitive members.</param>
            <returns>a <code>AppsExtendedFeed</code> containing all the <code>AppsExtendedEntry</code>
            from the Domain</returns>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.RetrieveMember(System.String,System.String)">
            <summary>
            Retrieves the members of the group
            </summary>
            <param name="memberId">username or groupId to retrieve</param>
            <param name="groupId">Groups's id</param>
            <returns>a <code>AppsExtendedEntry</code> containing the results of the
            query</returns>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.IsMember(System.String,System.String)">
            <summary>
            Checks if a user or a group is member of a group
            </summary>
            <param name="memberId">username or groupId to check</param>
            <param name="groupId">Groups's id</param>
            <returns>a <code>Boolean</code></returns>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.RemoveMemberFromGroup(System.String,System.String)">
            <summary>
            Remove a member from a group
            </summary>
            <param name="memberId">username or groupId to remove</param>
            <param name="groupId">Groups's id</param>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.AddOwnerToGroup(System.String,System.String)">
            <summary>
            Adds an owner to a group
            </summary>
            <param name="email">owner's Email to add to the group</param>
            <param name="groupId">Groups's id</param>
            <returns>a <code>AppsExtendedEntry</code> containing the results of the
            creation</returns>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.RetrieveGroupOwners(System.String)">
            <summary>
            Retrieves all owners of the group
            </summary>
            <param name="groupId">Groups's id</param>
            <returns>a <code>AppsExtendedFeed</code> containing all the <code>AppsExtendedEntry</code>
            from the Domain</returns>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.RetrieveOwner(System.String,System.String)">
            <summary>
            Retrieves the owner of the group
            </summary>
            <param name="email">email of the owner to retrieve</param>
            <param name="groupId">Groups's id</param>
            <returns>a <code>AppsExtendedEntry</code> containing the results of the
            query</returns>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.IsOwner(System.String,System.String)">
            <summary>
            Checks if a user or a group is owner of a group.
            </summary>
            <param name="email">owner's Email to check</param>
            <param name="groupId">Groups's id</param>
            <returns>a <code>Boolean</code></returns>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.RemoveOwnerFromGroup(System.String,System.String)">
            <summary>
            Remove a owner from a group.
            </summary>
            <param name="email">owner's Email to remove</param>
            <param name="groupId">Groups's id</param>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.OnParsedNewGroupsItemEntry(System.Object,Google.GData.Client.FeedParserEventArgs)">
            <summary>
            Event handler. Called when a new Google Groups entry is parsed.
            </summary>
            <param name="sender">the object that's sending the evet</param>
            <param name="e">FeedParserEventArguments, holds the feedentry</param>
        </member>
        <member name="M:Google.GData.Apps.Groups.GroupsService.OnNewFeed(System.Object,Google.GData.Client.ServiceEventArgs)">
            <summary>
            Overridden so that new feeds are returned as <code>GoogleMailSettingsFeed</code>s
            instead of base <code>AtomFeed</code>s.
            </summary>
            <param name="sender"> the object which sent the event</param>
            <param name="e">FeedParserEventArguments, holds the FeedEntry</param> 
        </member>
        <member name="P:Google.GData.Apps.Groups.GroupsService.Domain">
            <summary>
            Accessor for Domain property.
            </summary>
            <param name="domain">The hosted domain in which the Google Groups are
            being set up</param>
        </member>
        <member name="T:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsEntry">
            <summary>
            A Google Apps Google Mail Settings entry.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsEntry.#ctor">
            <summary>
            Constructs a new <code>GoogleMailSettingsEntry</code> object.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsEntry.getPropertyByName(System.String)">
            <summary>
            Gets a PropertyElement by its Name
            </summary>
            <returns>a <code>PropertyElement</code> containing the results of the
            execution</returns>         
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsEntry.getPropetyValueByName(System.String)">
            <summary>
            Gets a the Value of a PropertyElement by its Name
            </summary>
            <returns>a string containing the results of the execution</returns>
        </member>
        <member name="M:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsEntry.Update">
            <summary>
            Updates this GoogleMailSettingsEntry.
            </summary>
            <returns>the updated GoogleMailSettingsEntry</returns>
        </member>
        <member name="P:Google.GData.Apps.GoogleMailSettings.GoogleMailSettingsEntry.Properties">
            <summary>
            Properties accessor
            </summary>
        </member>
        <member name="T:Google.GData.Apps.NicknameService">
            <summary>
            The NicknameService class extends the AppsService abstraction
            to define a service that is preconfigured for access to Google Apps
            nickname feeds.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.NicknameService.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="applicationName">The name of the client application 
            using this service.</param>
        </member>
        <member name="M:Google.GData.Apps.NicknameService.Query(Google.GData.Apps.NicknameQuery)">
            <summary>
            overwritten Query method
            </summary>
            <param name="feedQuery">The FeedQuery to use</param>
            <returns>the retrieved NicknameFeed</returns>
        </member>
        <member name="M:Google.GData.Apps.NicknameService.Insert(Google.GData.Apps.NicknameFeed,Google.GData.Apps.NicknameEntry)">
            <summary>
            Inserts a new nickname entry into the specified feed.
            </summary>
            <param name="feed">the feed into which this entry should be inserted</param>
            <param name="entry">the entry to insert</param>
            <returns>the inserted entry</returns>
        </member>
        <member name="M:Google.GData.Apps.NicknameService.Insert(System.Uri,Google.GData.Apps.NicknameEntry)">
            <summary>
            Inserts a new nickname entry into the feed at the
            specified URI.
            </summary>
            <param name="feedUri">the URI of the feed into which this entry should be inserted</param>
            <param name="entry">the entry to insert</param>
            <returns>the inserted entry</returns>
        </member>
        <member name="M:Google.GData.Apps.NicknameService.Update(Google.GData.Client.AtomEntry)">
            <summary>
            Overrides the base Update() method to throw an
            exception, because nickname entries cannot be
            updated.
            </summary>
            <param name="entry">the entry the user is trying to update</param>
        </member>
        <member name="M:Google.GData.Apps.NicknameService.Delete(System.Uri)">
            <summary>
            Overridden Delete method that throws AppsException
            </summary>
            <param name="uri">the URI to delete</param>
        </member>
        <member name="M:Google.GData.Apps.NicknameService.Delete(Google.GData.Apps.NicknameEntry)">
            <summary>
            Overridden Delete method that throws AppsException
            </summary>
            <param name="entry">the NicknameEntry to delete</param>
        </member>
        <member name="M:Google.GData.Apps.NicknameService.OnParsedNewNicknameEntry(System.Object,Google.GData.Client.FeedParserEventArgs)">
            <summary>
            Event handler. Called when a new list entry is parsed.
            </summary>
            <param name="sender">the object that's sending the evet</param>
            <param name="e">FeedParserEventArguments, holds the feedentry</param>
        </member>
        <member name="M:Google.GData.Apps.NicknameService.OnParsedNewFeed(System.Object,Google.GData.Client.ServiceEventArgs)">
            <param name="e"><code>ServiceEventArgs</code>, holds the feed</param>
        </member>
        <member name="T:Google.GData.Apps.UserFeed">
            <summary>
            Feed API customization class for defining user account feed.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.UserFeed.#ctor(System.Uri,Google.GData.Client.IService)">
            <summary>
            Constructor
            </summary>
            <param name="uriBase">The uri for the user account feed.</param>
            <param name="iService">The user account service.</param>
        </member>
        <member name="M:Google.GData.Apps.UserFeed.CreateFeedEntry">
            <summary>
            Overridden.  Returns a new <code>UserEntry</code>.
            </summary>
            <returns>the new <code>UserEntry</code></returns>
        </member>
        <member name="T:Google.GData.Apps.EmailListEntry">
            <summary>
            A Google Apps email list entry.  An EmailListEntry object
            contains information about a single email list.
            </summary>
        </member>
        <member name="F:Google.GData.Apps.EmailListEntry.EMAILLIST_CATEGORY">
            <summary>
            Category used to label entries that contain email list
            extension data.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.EmailListEntry.#ctor">
            <summary>
            Constructs a new EmailListEntry instance with the appropriate category
            to indicate that it is a email list.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.EmailListEntry.#ctor(System.String)">
            <summary>
            Constructs a new EmailListEntry instance with the specified list name.
            </summary>
            <param name="emailListName">the name of the email list</param>
        </member>
        <member name="M:Google.GData.Apps.EmailListEntry.Update">
            <summary>
            Overrides the base Update() method to throw a ClientFeedException,
            because email list entries cannot be updated.  This exception
            indicates that the client made an erroneous request to the email
            list feed.
            </summary>
        </member>
        <member name="P:Google.GData.Apps.EmailListEntry.EmailList">
            <summary>
            The email list element in this entry.
            </summary>
        </member>
        <member name="T:Google.GData.Apps.EmailListRecipientService">
            <summary>
            The EmailListRecipientService class extends the AppsService abstraction
            to define a service that is preconfigured for access to Google Apps
            email list feeds.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientService.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="applicationName">The name of the client application 
            using this service.</param>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientService.Query(Google.GData.Apps.EmailListRecipientQuery)">
            <summary>
            overwritten Query method
            </summary>
            <param name="feedQuery">The FeedQuery to use</param>
            <returns>the retrieved EmailListRecipientFeed</returns>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientService.OnNewFeed(System.Object,Google.GData.Client.ServiceEventArgs)">
            <summary>eventchaining. We catch this by from the base service, which 
            would not by default create an atomFeed</summary> 
            <param name="sender"> the object which send the event</param>
            <param name="e">FeedParserEventArguments, holds the feedentry</param> 
            <returns> </returns>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientService.Insert(Google.GData.Apps.EmailListRecipientFeed,Google.GData.Apps.EmailListRecipientEntry)">
            <summary>
            Inserts a new email list recipient entry into the specified feed.
            </summary>
            <param name="feed">the feed into which this entry should be inserted</param>
            <param name="entry">the entry to insert</param>
            <returns>the inserted entry</returns>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientService.Insert(System.Uri,Google.GData.Apps.EmailListRecipientEntry)">
            <summary>
            Inserts a new email list recipient entry into the feed at the
            specified URI.
            </summary>
            <param name="feedUri">the URI of the feed into which this entry should be inserted</param>
            <param name="entry">the entry to insert</param>
            <returns>the inserted entry</returns>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientService.Update(Google.GData.Client.AtomEntry)">
            <summary>
            Overrides the base Update() method to throw an
            exception, because email list recipient entries cannot be
            updated.
            </summary>
            <param name="entry">the entry the user is trying to update</param>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientService.Delete(System.Uri)">
            <summary>
            Overridden Delete method that throws AppsException
            </summary>
            <param name="uri">the URI to delete</param>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientService.Delete(Google.GData.Apps.EmailListRecipientEntry)">
            <summary>
            Overridden Delete method that throws AppsException
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Google.GData.Apps.EmailListRecipientService.OnParsedNewFeed(System.Object,Google.GData.Client.ServiceEventArgs)">
            <summary>
            Feed handler.  Instantiates a new <code>EmailListRecipientFeed</code>.
            </summary>
            <param name="sender">the object that's sending the evet</param>
            <param name="e"><code>ServiceEventArgs</code>, holds the feed</param>
        </member>
        <member name="T:Google.GData.Apps.EmailListFeed">
            <summary>
            Feed API customization class for defining email list feed.
            </summary>
        </member>
        <member name="M:Google.GData.Apps.EmailListFeed.#ctor(System.Uri,Google.GData.Client.IService)">
            <summary>
            Constructs a new EmailListFeed.
            </summary>
            <param name="uriBase">the feed URI</param>
            <param name="iService">the Service object with which
            this feed is to be associated</param>
        </member>
        <member name="M:Google.GData.Apps.EmailListFeed.CreateFeedEntry">
            <summary>
            Overridden.  Returns a new <code>EmailListEntry</code>.
            </summary>
            <returns>the new new <code>EmailListEntry</code></returns>
        </member>
    </members>
</doc>
